# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "build"

on:
  push:
    branches: [main, dev]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]

jobs:
  linux:
    name: linux
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'

    - run: sudo apt update

    - run: sudo apt install lcov
    
    - name: Install Conan
      uses: turtlebrowser/get-conan@main
      
    - run: conan profile detect
      
    - name: Install dependencies with Conan
      run: conan install . -s build_type=Debug -of . --build=missing

    - name: Download ECM
      uses: suisei-cn/actions-download-file@v1
      with:
        url: 'https://github.com/KDE/extra-cmake-modules/archive/refs/tags/v6.9.0.zip'
        target: ./

    - name: Unzip ECM
      run: unzip v6.9.0.zip

    - run: ls

    - name: Configure ECM
      run: cmake -S extra-cmake-modules-6.9.0 -B build-extra-cmake-modules -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DBUILD_HTML_DOCS=OFF -DBUILD_MAN_DOCS=OFF -DCMAKE_INSTALL_PREFIX=./KDE

    - name: Build ECM
      run: cmake --build build-extra-cmake-modules --config Release

    - name: Install ECM
      run: cmake --install build-extra-cmake-modules --prefix ./KDE

    - name: Generate Makefiles
      run: cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_MD4QT_STL_TESTS=ON -DECM_DIR=./KDE/share/ECM/cmake .

    - name: Build
      run: make

    - name: Test
      run: |
        export QT_QPA_PLATFORM=offscreen
        ctest --output-on-failure --verbose

    - name: Upload coverage info
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Codecov Upload
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  windows:
    name: windows
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'
      
    - name: Install Conan
      uses: turtlebrowser/get-conan@main
      
    - run: conan profile detect
      
    - name: Install dependencies with Conan
      run: conan install . -s build_type=Debug -of . --build=missing

    - name: Download ECM
      uses: suisei-cn/actions-download-file@v1
      with:
        url: 'https://github.com/KDE/extra-cmake-modules/archive/refs/tags/v6.9.0.zip'
        target: ./

    - name: Unzip ECM
      run: unzip v6.9.0.zip

    - name: Configure ECM
      run: cmake -S extra-cmake-modules-6.9.0 -B build-extra-cmake-modules -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DBUILD_HTML_DOCS=OFF -DBUILD_MAN_DOCS=OFF -DCMAKE_INSTALL_PREFIX=./KDE

    - name: Build ECM
      run: cmake --build build-extra-cmake-modules --config Release

    - name: Install ECM
      run: cmake --install build-extra-cmake-modules --prefix ./KDE

    - name: Generate Makefiles
      run: cmake -S . -B . -DCMAKE_BUILD_TYPE=Debug -DBUILD_MD4QT_STL_TESTS=ON -DECM_DIR="KDE/share/ECM/cmake"

    - name: Build
      run: cmake --build . --config Debug

    - name: Test
      run: ctest --output-on-failure --verbose -C Debug

  macos:
    name: macos
    runs-on: macos-latest

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'
        
    - name: Install Conan
      uses: turtlebrowser/get-conan@main
      
    - run: conan profile detect
      
    - name: Install dependencies with Conan
      run: conan install . -s build_type=Debug --build=missing -of .

    - name: Download ECM
      uses: suisei-cn/actions-download-file@v1
      with:
        url: 'https://github.com/KDE/extra-cmake-modules/archive/refs/tags/v6.9.0.zip'
        target: ./

    - name: Unzip ECM
      run: unzip v6.9.0.zip

    - name: Configure ECM
      run: cmake -S extra-cmake-modules-6.9.0 -B build-extra-cmake-modules -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DBUILD_HTML_DOCS=OFF -DBUILD_MAN_DOCS=OFF -DCMAKE_INSTALL_PREFIX=./KDE

    - name: Build ECM
      run: cmake --build build-extra-cmake-modules --config Release

    - name: Install ECM
      run: cmake --install build-extra-cmake-modules --prefix ./KDE

    - name: Generate Makefiles
      run: cmake -DBUILD_MD4QT_STL_TESTS=ON -DCMAKE_BUILD_TYPE=Debug -DECM_DIR=./KDE/share/ECM/cmake .

    - name: Build
      run: make

    - name: Test
      run: |
        export QT_QPA_PLATFORM=offscreen
        export DYLD_FRAMEWORK_PATH=${{ github.workspace }}/../Qt/6.3.1/macos/lib:$DYLD_FRAMEWORK_PATH
        ctest --output-on-failure --verbose
